<!--
<div id="apl-hide" data-apl-hide="header"></div>
<div>
-->
<select>{{Auth.select}}</select>
<!--
<input value="{{Auth.userName}}" />
<br/>
<select id="{{Auth.selected}}" >{{Auth.select}}</select>

<span id="{{Auth.userName}}"> Span with interpolated attributes and text {{Auth.userName}} </span>
<br />


<div id="{{Auth.url}}" class="" >Attrib Test {{Auth.userName}}</div>

<div>{{Auth.banner}}</div>

<div>You have Selected {{Auth.selected}}</div>


<div id="{{Auth.userName}}">I Love You {{Auth.userName}}</div>

<div>Welcome {{Auth.userName}} To The Terror Dome! {{Env.host}}{{Auth.url}}</div>


<div id="{{Env.host}}/{{Auth.url}}">Attrib Test</div>


<button id="btn-list1" >List 1</button>
<button id="btn-list2">List 2</button>

<ul>
  <li id="items" data-apl-repeat="Auth.items">
    <span id="start-{{$index}}">Buy {{title}} for ONLY </span>
    <span style="color:{{color}};">{{price}}!!!!</span>  {{Auth.userName}}
  </li>
</ul>
<br>

<ul>
  <li data-apl-repeat="Auth.list">
    <span id="{{$index}}" style="color : {{Env.color}};">{{}} {{$index}}</span>
  </li>
</ul>
<button id="btn-update-footer">Update Footer</button>
</div>
-->


<!--



<ul>
  <li id="items" data-apl-repeat="Auth.videos">
    <video id="video-{{$index}}" src="{{source}} "data-apl-control="videoPlayer"></video>
    <button id="start-{{$index}}" data-apl-control="startVideoBtn"></button>
  </li>
</ul>

/*intialize data for each control of type 'videoPlayer'*/
Templar('videoPlayer').init({posX : 0, posY : 0});

/*give each control of type 'videoPlayer' functions*/
Templar('videoPlayer').action('start', function(){
  //this is the video node
  //other setup stuff
  this.play();
});

/*give each control of type 'videoPlayer' listeners*/
Sets onlicks for all startVideo nodes
Templar('startVideo').listen('onclick', function(e){
  var myIndex = e.target.id.split('-');
  Templar('videoPlayer', myIndex).start();
});

Sets onlicks for all startVideo @ index 3
Templar('startVideo', 3).listen('onclick', function(e){
  //Stuff
});

/*give each control(s) of any type functions*/
Templar.action('slideDown', function(){
  //'this' is the wrapped node, 'this.node' is Node
});

/*initialize data each control of any type*/
Templar.init({posX : 0, posY : 0});

listen() filters out all but: 
standard events:
['onabort','onblur','onerror', 'onabort','onfocus','onchange',
'onclick','onclose','oncontextmenu','ondblclick','oninput','onkeydown','onkeypress','onkeyup',
'onload','onmousedown','onmousemove','onmouseout','onmouseover','onmouseup','onscroll','onselect',
'onsubmit']

non-standard events:
['oncancel','oncanplay','oncanplaythrough','oncuechange','ondrag','ondragend','ondragenter','ondragexit',
'ondragleave','ondragover','ondragstart','ondrop','ondurationchange','onemptied','onended','oninvalid',
'onloadeddata','onloadedmetadata','onloadstart','onmouseenter','onmouseleave','onmousewheel','onmozfullscreenchange',
'onmozfullscreenerror','onpause','onplay','onplaying','onpointerdown','onpointermove','onpointerup'
,'onpointercancel','onpointerover','onpointerout','onpointerenter','onpointerleave','onpointerlockchange',
'onpointerlockerror','onprogress','onratechange','onreset','onseeked','onseeking','onshow','onsort',
'onstalled','onsuspend','ontimeupdate','onvolumechange','onwaiting']

Sets onlicks for all startVideo @ every 3rd index
Templar('startVideo', -3).listen('onclick', function(e){
  //Stuff
});

Control member functions

Templar('startVideo').show()
Templar('startVideo').hide()
Templar('startVideo').addClass()
Templar('startVideo').removeClass()
Templar('startVideo').hasClass()
Templar('startVideo').hidden() /*check display and visibilty property*/

-->



<ul>
  <li id="items" data-apl-repeat="Auth.items">Buy {{title}} for ONLY {{price}}!!!!</li>
</ul>


<div id="apl-hide" data-apl-hide="header"></div>

<input value="{{Auth.userName}}" />
<br/>
<select id="{{Auth.selected}}" >{{Auth.select}}</select>

<span id="{{Auth.userName}}"> Span with interpolated attributes and text {{Auth.userName}} </span>
<br />


<div id="{{Auth.url}}" class="" >Attrib Test {{Auth.userName}}</div>

<div>{{Auth.banner}}</div>

<div>You have Selected {{Auth.selected}}</div>


<div id="{{Auth.userName}}">I Love You {{Auth.userName}}</div>

<div>Welcome {{Auth.userName}} To The Terror Dome! {{Env.host}}{{Auth.url}}</div>


<div id="{{Env.host}}/{{Auth.url}}">Attrib Test</div>


<button id="btn-list1" >List 1</button>
<button id="btn-list2">List 2</button>

<ul>
  <li id="items" data-apl-repeat="Auth.items">
    <span id="start-{{$index}}">Buy {{title}} for ONLY </span>
    <span style="color:{{color}};">{{price}}!!!!</span>  {{Auth.userName}}
  </li>
</ul>
<br>

<ul>
  <li data-apl-repeat="Auth.list">
    <span id="{{$index}}" style="color : {{Env.color}};">{{}} {{$index}}</span>
  </li>
</ul>
<button id="btn-update-footer">Update Footer</button>
</div>


/*
  //Limit any sequential data attrib, like those backing repeats
  LoginModel.limit('items').to(4);
  
  //Pagination (updates View)
  LoginModel.gotoPage(2).of('list');

  //multi condition static search (PASSED)
  LoginModel.filter('numbers')
  .using(function(a){ return (a > 2);})
  .and(function(a){ return (a < 5);});
  
  //Live filter after static filter (PASSED)
  LoginModel.filter('numbers')
  .using('userInput');
  
  //single prop static search
  LoginModel.filter('items')
  .by('price')
  .using(function(price){return parseInt(price) > 15});
  
  //multi prop static search
  LoginModel.filter('items')
  .using(function(item){return parseInt(item.price) > 15})
  .and(function(item){ return title.indexOf('P') != -1;});
  

  //Live filter by property
  LoginModel.filter('countries')
  .by('text')
  .using('userInput');
  

  //Live filtera
  LoginModel.filter('list').using('userInput');
    
  LoginModel.filter('items')
  .by('title')
  .using('userInput');

  //reset static filtered data to unfiltered, remove all live filters
  LoginModel.resetFilter('items');
 
  //Live filter with input filtering and overridding default startsWith filtering
  //Note using clause only accepts single-argument live filters
  LoginModel.filter('items')
    .by('title')
    .using('userInput')
    .and(function(input, title){ return (title.indexOf(input) == 0);})
    .and(function(input){ return (input.length > 2);});

  //static filter with overridden default filter and other filter on different properties
  LoginModel.filter('items')
    .using(function(item){
       return (item.title.indexOf('P') == 0 || item.title.indexOf('T') == 0);
    })
    .and(function(item){
       return (item.price > 25);
    })
    .and(function(item){
      return (item.price < 201 );
    })
    
  //Basic sort
  LoginModel.sort('numbers').orderBy();
    
  //Cascading sort
  LoginModel.sort('items').orderBy('title').thenBy('price').thenBy('color');
  
  //Page sort(s) (Updates View)
  LoginModel.sortPage(3).of('numbers').orderBy();
  LoginModel.sortPage(2).of('items').orderBy('title').thenBy('price');
  
  console.log(LoginModel.attributes['items']);
  
  //Repeat Contorls
  var audioplayers = Templar('audioPlayer');
  
  //listenTo() called on a control will look for id's of control's children
  audioplayers.listenTo('play').for('onclick', function(self){
    self.player.play();
  };
  
  //Single Controls
  Templar.listenTo('sortByPrice').forEvent('onclick', function(){
  
  });
  */